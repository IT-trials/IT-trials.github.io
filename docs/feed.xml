<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>IT Trials</title>
    <description>Journal Blog for the trials and errors of a Sysadmin.
</description>
    <link>https://it-trials.craigchamberlain.it/</link>
    <atom:link href="https://it-trials.craigchamberlain.it/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Fri, 12 Jul 2024 14:17:28 +0100</pubDate>
    <lastBuildDate>Fri, 12 Jul 2024 14:17:28 +0100</lastBuildDate>
    <generator>Jekyll v4.3.1</generator>
    
      <item>
        <title>Saving Sensitive Data to File with PowerShell</title>
        <description>&lt;h2 id=&quot;problem&quot;&gt;Problem:&lt;/h2&gt;
&lt;p&gt;You may want to store credentials on a computer for later use, either to save repeated entry or to allow for automation.  However, this information should rarely be trivially accessible to another user of the computer.  Therefore, saving credentials and other secrets in clear text is not advisable. Some form of encryption or at least obfuscation is advisable.&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution:&lt;/h2&gt;
&lt;p&gt;.NET and PowerShell has a Class called &lt;a href=&quot;https://learn.microsoft.com/en-us/dotnet/api/system.security.securestring&quot; target=&quot;_blank&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SecureString&lt;/code&gt;&lt;/a&gt; that can be a safer way to hold sensitive data in memory than a simple &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;System&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;String&lt;/code&gt;.  Although &lt;a href=&quot;https://github.com/dotnet/platform-compat/blob/master/docs/DE0001.md&quot; target=&quot;_blank&quot;&gt;this is not to be considered completely safe, particularly on non-Windows systems&lt;/a&gt;, I am unaware of a better, easily supported way of getting at least some protection in PowerShell.  I’d love to hear about more rock solid options in a comment and I will post an additional article.  Use this method if your alternative is storing in clear text, as the cost is low enough to be considered free.  If your working with state secrets this is certainly not the final word.&lt;/p&gt;

&lt;h3 id=&quot;acquire-your-securestring&quot;&gt;Acquire your SecureString&lt;/h3&gt;

&lt;p&gt;One way to acquire a [&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SecureString&lt;/code&gt;] is from the host.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-posh&quot; data-lang=&quot;posh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$secureString&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Read-Host&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-AsSecureString&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You can also convert a standard string from some other input.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-posh&quot; data-lang=&quot;posh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$secureString&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Secret&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ConvertTo-SecureString&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-AsPlainText&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;persisting-your-securestring&quot;&gt;Persisting your SecureString&lt;/h3&gt;
&lt;p&gt;PowerShell has the &lt;a href=&quot;https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.security/convertfrom-securestring&quot; target=&quot;_blank&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ConvertFrom-SecureString&lt;/code&gt;&lt;/a&gt;  Cmdlet.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The ConvertFrom-SecureString cmdlet converts a secure string (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;System.Security.SecureString&lt;/code&gt;) into an encrypted standard string (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;System.String&lt;/code&gt;). Unlike a secure string, an encrypted standard string can be saved in a file for later use.&lt;br /&gt;
– &lt;cite&gt;&lt;a href=&quot;https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.security/convertfrom-securestring?view=powershell-7.3#description&quot; target=&quot;_blank&quot;&gt;ConvertFrom-SecureString&lt;/a&gt; &lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is an essential step to serialise our SecureString prior to persisting to a text file.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-posh&quot; data-lang=&quot;posh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$secureString&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ConvertFrom-SecureString&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;secret.txt&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Or even a json structure.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-posh&quot; data-lang=&quot;posh&quot;&gt;&lt;span class=&quot;p&quot;&gt;@{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Secret&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$secureString&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ConvertFrom&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SecureString&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ConvertTo-Json&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;secret.json&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;importing-your-securestring&quot;&gt;Importing your SecureString&lt;/h3&gt;
&lt;p&gt;When you read your secure string back from file, it is in the form of an encrypted &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;String&lt;/code&gt;, this will almost always need to be converted back to a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SecureString&lt;/code&gt; and ultimately a clear text &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;String&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-posh&quot; data-lang=&quot;posh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$encryptedString&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Get-Contents&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;secret.txt&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Raw&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$secureString&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$encryptedString&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ConvertTo-SecureString&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$clearTextString&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$secureString&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ConvertFrom-SecureString&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-AsPlainText&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
</description>
        <pubDate>Fri, 24 Feb 2023 00:00:00 +0000</pubDate>
        <link>https://it-trials.craigchamberlain.it/scripting/saving-sensitive-data-to-file-with-powershell</link>
        <guid isPermaLink="true">https://it-trials.craigchamberlain.it/scripting/saving-sensitive-data-to-file-with-powershell</guid>
        
        
        <category>Scripting</category>
        
      </item>
    
      <item>
        <title>Populate Active Directory with iSAMS Pupil Data</title>
        <description>&lt;h2 id=&quot;problem&quot;&gt;Problem:&lt;/h2&gt;
&lt;p&gt;If you work at a school using iSAMS, it is probably your trusted data source for pupil info such as preferred name.  But who maintains AD to make sure changes propagate to your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Global Address List&lt;/code&gt;?&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution:&lt;/h2&gt;
&lt;p&gt;PowerShell makes the management of Active Directory very easy using the &lt;a href=&quot;https://learn.microsoft.com/en-us/powershell/module/activedirectory/&quot; target=&quot;_blank&quot;&gt;ActiveDirectory&lt;/a&gt; Module.&lt;/p&gt;

&lt;p&gt;I have published a client and &lt;a href=&quot;https://github.com/CraigChamberlain/IsamsBatchApiClient.NET.Core&quot; target=&quot;_blank&quot;&gt;PowerShell Module&lt;/a&gt; the the iSAMS Batch API.&lt;/p&gt;

&lt;p&gt;This can be installed from the PowerShell Gallery:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-posh&quot; data-lang=&quot;posh&quot;&gt;&lt;span class=&quot;n&quot;&gt;Install-Module&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;IsamsBatchApi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We can use these modules to acquire the data and and make changes to Active Directory.&lt;/p&gt;

&lt;h3 id=&quot;acquiring-the-pupil-data&quot;&gt;Acquiring the Pupil Data&lt;/h3&gt;
&lt;p&gt;The simplest way to get the data is using an API Key&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-posh&quot; data-lang=&quot;posh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$pupils&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Get-IsamsCurrentPupil&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-ApiKey&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0A1C996B-8E74-4388-A3C4-8DA1E30ADA57&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-IsamsInstance&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://school.isams.cloud&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;However, this authentication method will be phased out in the future and you will need to Connect using OATH&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-posh&quot; data-lang=&quot;posh&quot;&gt;&lt;span class=&quot;n&quot;&gt;Connect-Isams&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-ClientID&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Your_ID&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-ClientSecret&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Your_SECRET&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-IsamsInstance&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://school.isams.cloud&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$pupils&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Get-IsamsCurrentPupil&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Disconnect-Isams&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;matching-with-active-directory&quot;&gt;Matching with Active Directory&lt;/h3&gt;
&lt;p&gt;In our environment, the iSAMS property &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SchoolCode&lt;/code&gt; matches the AD property &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SamAccountName&lt;/code&gt; which is also a valid &lt;a href=&quot;https://learn.microsoft.com/en-us/powershell/module/activedirectory/get-aduser#-identity&quot; target=&quot;_blank&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-Identity&lt;/code&gt;&lt;/a&gt; property of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Get-ADUser&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Therefore we can iterate over our pupils and attempt to get our AD users like this.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-posh&quot; data-lang=&quot;posh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$pupils&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ForEach-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Get-ADUser&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;SchoolCode&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Properties&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;EmployeeID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;EmployeeNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DisplayName&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# Some action&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;However, the iSAMS property &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SchoolCode&lt;/code&gt; is not a perfect primary key - there is no guarantee of uniqueness and it might change throughout a pupils school career.  Therefore, I prefer to use the iSAMS properties &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Id&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SchoolId&lt;/code&gt; which I write into the AD properties &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EmployeeID&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EmployeeNumber&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-posh&quot; data-lang=&quot;posh&quot;&gt;&lt;span class=&quot;n&quot;&gt;Set-ADUser&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-EmployeeID&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Id&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Confirm&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Set-ADUser&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-EmployeeNumber&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;SchoolId&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Confirm&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;example-script&quot;&gt;Example Script&lt;/h3&gt;
&lt;p&gt;You may be able to use the following script as a starting point for your own environment.&lt;/p&gt;

&lt;p&gt;I store restricted information in a config file using a method I describe in &lt;a href=&quot;/scripting/saving-sensitive-data-to-file-with-powershell&quot;&gt;my next post&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The following will persist details with at least some obfuscation to file.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-posh&quot; data-lang=&quot;posh&quot;&gt;&lt;span class=&quot;p&quot;&gt;@{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;BatchAPI&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;@{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Host&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Read&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Host&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Prompt&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Input your iSAMS instance e.g. https://school.isams.cloud&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ConvertTo&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SecureString&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AsPlainText&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Force&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ConvertFrom&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SecureString&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ClientID&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Read&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Host&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AsSecureString&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Prompt&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Input your Client ID e.g. 6283d2d5-2518-4999-9db0-cc5c81750069&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ConvertFrom&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SecureString&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ClientSecret&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Read&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Host&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AsSecureString&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Prompt&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Input your Client Secret e.g. 69bd76b9-00ca-44d7-8e86-72368c33c33f&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ConvertFrom&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SecureString&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ActiveDirectory&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;@{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PupilSearchBase&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Read&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Host&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Prompt&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Input the OU you pupils are stored in e.g. OU=Pupils,DC=domain,DC=local&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ConvertTo&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SecureString&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AsPlainText&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Force&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ConvertFrom&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SecureString&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;StaffSearchBase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Read&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Host&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Prompt&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Input the OU you staff are stored in e.g. OU=Staff,DC=domain,DC=local&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ConvertTo&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SecureString&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AsPlainText&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Force&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ConvertFrom&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SecureString&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ConvertTo-Json&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config.json&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The following script loads this information so it need not be input manually every time it is run.  It will prompt for user confirmation when a new match between AD and iSAMS is found before writing the iSAMS primary key to the AD user.  AD Users with a matching iSAMS ID will have other properties updated to match iSAMS as required.  Furthermore, a set of pupils that may need to be created in AD are collected in the variable &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$isamsUsersToCreate&lt;/code&gt;.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/d70a2804f20abe8ca2a96654d2d587c6.js&quot;&gt; &lt;/script&gt;

</description>
        <pubDate>Fri, 24 Feb 2023 00:00:00 +0000</pubDate>
        <link>https://it-trials.craigchamberlain.it/scripting/populate-active-directory-with-isams-pupil-data</link>
        <guid isPermaLink="true">https://it-trials.craigchamberlain.it/scripting/populate-active-directory-with-isams-pupil-data</guid>
        
        
        <category>Scripting</category>
        
      </item>
    
      <item>
        <title>Making Class Teams with the MicrosoftTeams PowerShell Module</title>
        <description>&lt;h2 id=&quot;problem&quot;&gt;Problem:&lt;/h2&gt;
&lt;p&gt;We have c. 500 different sets, each with at least one teacher and many pupils.  This information is all available from our MIS but how can we automate to provisioning of the Class Teams complete with Classroom Notebooks?&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution:&lt;/h2&gt;

&lt;p&gt;Microsoft provide a very helpful Module called &lt;a href=&quot;https://www.powershellgallery.com/packages/MicrosoftTeams/4.9.1&quot; target=&quot;_blank&quot;&gt;MicrosoftTeams&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You might need to install and then connect to your Office365 instance before trying following along.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-posh&quot; data-lang=&quot;posh&quot;&gt;&lt;span class=&quot;n&quot;&gt;Install-Module&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;MicrosoftTeams&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Connect-MicrosoftTeams&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The template for a Class Team is called &lt;strong&gt;EDU_Class&lt;/strong&gt; and can be used like this&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-posh&quot; data-lang=&quot;posh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$newTeam&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;New-Team&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Template&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;EDU_Class&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-DisplayName&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Your New Team&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Once you have a team, via the return object of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;New-Team&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Get-Team&lt;/code&gt;, you can add members and teachers using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Add-TeamUser&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-posh&quot; data-lang=&quot;posh&quot;&gt;&lt;span class=&quot;n&quot;&gt;Add-TeamUser&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-GroupId&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$newTeam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GroupId&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-User&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pupil&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;domain.com&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Role&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Member&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Add-TeamUser&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-GroupId&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$newTeam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GroupId&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-User&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;teacher&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;domain.com&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Role&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Owner&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Although this approach does work, it runs into problems at scale.  Team creation can be very slow and even at failure prone due to throttling.  For this reason, I found it better to create the teams in several passes with error correction and then populate the sets once this stage is complete.&lt;/p&gt;

&lt;p&gt;I get my set information from my MIS in a particular format which might not match your own.  All the same you may find this script a useful resource when creating your own.  I did find some slightly annoying loops when an email address from the MIS did not quite match AD, where a member would be added and removed on each pass, keep your data consistent where you can and look out for similar problems.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/cf6cae2cecb8343d1b8a361256d12a83.js&quot;&gt; &lt;/script&gt;

&lt;h2 id=&quot;batching---not-currently-supported&quot;&gt;Batching - Not currently supported:&lt;/h2&gt;

&lt;p&gt;In the future, there may be better approaches such as batching.  Microsoft also provide a batch option called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;New-CsBatchTeamsDeployment&lt;/code&gt; which is not clear in the help file but is described in the following article, &lt;a href=&quot;https://learn.microsoft.com/en-us/microsoft-365/frontline/deploy-teams-at-scale?view=o365-worldwide&quot; target=&quot;_blank&quot;&gt;Deploy Teams at scale for frontline workers&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I attempted to use this API using the following tables in csv format.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Team Name&lt;/th&gt;
      &lt;th&gt;Existing Team ID&lt;/th&gt;
      &lt;th&gt;Visibility&lt;/th&gt;
      &lt;th&gt;Team Template ID&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Your New Team&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;Private&lt;/td&gt;
      &lt;td&gt;EDU_Class&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;User Full Name&lt;/th&gt;
      &lt;th&gt;User UPN or ID&lt;/th&gt;
      &lt;th&gt;Team Name&lt;/th&gt;
      &lt;th&gt;ActionType&lt;/th&gt;
      &lt;th&gt;Owner or Member&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Mr Teacher&lt;/td&gt;
      &lt;td&gt;teacher@domain.com&lt;/td&gt;
      &lt;td&gt;Your New Team&lt;/td&gt;
      &lt;td&gt;AddMember&lt;/td&gt;
      &lt;td&gt;Owner&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Miss Pupil&lt;/td&gt;
      &lt;td&gt;puplil@domain.com&lt;/td&gt;
      &lt;td&gt;Your New Team&lt;/td&gt;
      &lt;td&gt;AddMember&lt;/td&gt;
      &lt;td&gt;Member&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-posh&quot; data-lang=&quot;posh&quot;&gt;&lt;span class=&quot;n&quot;&gt;New-CsBatchTeamsDeployment&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-TeamsFilePath&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;team.csv&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-UsersFilePath&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;users.csv&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-UsersToNotify&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;admin@domain.com&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;However, the Team Template ID &lt;strong&gt;EDU_Class&lt;/strong&gt; is unsupported which makes this approach useless at this time.  &lt;a href=&quot;https://feedbackportal.microsoft.com/feedback/idea/d0a569bf-f47b-ed11-a81b-000d3ae32cd0&quot; target=&quot;_blank&quot;&gt;I have asked Microsoft&lt;/a&gt; if they are going to support this Template or if it operates under a different name but have yet to receive an answer. Please up-vote this if you would like to make Teams this way.&lt;/p&gt;

&lt;h2 id=&quot;school-data-sync-sds&quot;&gt;School Data Sync (SDS):&lt;/h2&gt;
&lt;p&gt;You may be able to plug your MIS directly into SDS.  It is too prescriptive for our needs but I believe that it could be used to create teams from a custom system for example using the &lt;a href=&quot;https://learn.microsoft.com/en-gb/schooldatasync/data-ingestion-with-sds-v2.1-csv&quot; target=&quot;_blank&quot;&gt;csv data ingestion&lt;/a&gt; API.  I may look at using this for Teams creation next school year.&lt;/p&gt;

&lt;h2 id=&quot;microsoft-graph&quot;&gt;Microsoft Graph:&lt;/h2&gt;
&lt;p&gt;I have used Microsoft Graph a little bit now to get data on Teams Assignments and it seems really powerful.  It looks like this might become a good alternative to the Teams Module, please see the &lt;a href=&quot;https://learn.microsoft.com/en-us/graph/api/educationroot-post-classes?view=graph-rest-beta&amp;amp;tabs=http&quot; target=&quot;_blank&quot;&gt;MSGraph Create educationClass endpoint.&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 24 Feb 2023 00:00:00 +0000</pubDate>
        <link>https://it-trials.craigchamberlain.it/scripting/making-class-teams-with-the-microsoftteams-powershell-module</link>
        <guid isPermaLink="true">https://it-trials.craigchamberlain.it/scripting/making-class-teams-with-the-microsoftteams-powershell-module</guid>
        
        
        <category>Scripting</category>
        
      </item>
    
      <item>
        <title>Parsing and Transforming MidYIS grade export data</title>
        <description>&lt;h2 id=&quot;problem&quot;&gt;Problem:&lt;/h2&gt;
&lt;p&gt;At the school at which I work, we had no way of importing our baseline &lt;a href=&quot;https://www.cem.org/midyis&quot; target=&quot;_blank&quot;&gt;MidYIS&lt;/a&gt; scores into our MIS and other custom reporting tools.  At times this information was simply input by hand into forms in the MIS.  I decided to work out how to parse exports so that this was not necessary.  I have a &lt;a href=&quot;/scripting/parsing-alis-grade-exports&quot; target=&quot;_blank&quot;&gt;partner article on the ALIS baseline system&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution:&lt;/h2&gt;
&lt;p&gt;I will add an appendix with &lt;a href=&quot;#data-acquisition&quot;&gt;instructions on how I acquired the data&lt;/a&gt; but will dive straight into the implementation of how I chose to parse and transform&lt;/p&gt;

&lt;p&gt;Once you have your file for example &lt;strong&gt;MidYIS Year9 Predictions Feedback.xls&lt;/strong&gt; you may need to unblock a windows security lock and enable content:&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/38/unblock.png&quot; alt=&quot;Unblock&quot; /&gt;
	&lt;figcaption&gt;
	Unblock
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/38/enable-content.png&quot; alt=&quot;Enable Content&quot; /&gt;
	&lt;figcaption&gt;
	Enable Content
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Choose the Appropriate Tab e.g. &lt;strong&gt;GCSE (9-1) Preds&lt;/strong&gt; and then select &lt;strong&gt;Generate File for MIS Import&lt;/strong&gt;.&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/38/navigate-tab.png&quot; alt=&quot;Choose the Appropriate Tab&quot; /&gt;
	&lt;figcaption&gt;
	Choose the Appropriate Tab
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/38/generate-xml.png&quot; alt=&quot;Generate XML&quot; /&gt;
	&lt;figcaption&gt;
	Generate XML
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3 id=&quot;interpreting-the-file-with-powershell&quot;&gt;Interpreting the file with PowerShell&lt;/h3&gt;

&lt;p&gt;You can use the .NET  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;XML&lt;/code&gt; type to get a structured object from a valid XML document e.g. If you are working with a huge file you could be more careful and scan through a memory stream for the content of interest.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-posh&quot; data-lang=&quot;posh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$import&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;XML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Get-Content&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.\PredIE9XML_000XXXXX.xml&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If we explore the data we can traverse to a Node containing all of our predicted results.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-posh&quot; data-lang=&quot;posh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$import&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ResultFile&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ResultNode&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A single child Node of this contains all the data associated to a particular pupil in the result node.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-posh&quot; data-lang=&quot;posh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$import&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ResultFile&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ResultNode&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Result&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;However, many of the fields have values that I wish to tidy up.  Chief amongst this is the subject title which is normalised across another node which must be referenced by a foreign key, the &lt;strong&gt;AspectExternalId&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The subjects are stored in the &lt;strong&gt;AspectNode&lt;/strong&gt; and the content of a single subject in the child node &lt;strong&gt;Aspect&lt;/strong&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-posh&quot; data-lang=&quot;posh&quot;&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ResultFile&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;AspectNode&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ResultFile&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;AspectNode&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Aspect&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;One could find the relevant Aspect using a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Where-Object&lt;/code&gt; but this is inefficient and will require excessive enumeration.&lt;/p&gt;

&lt;p&gt;A more efficient way of doing this is to enumerate the Aspects once and assemble a HashTable table keyed on the primary key.&lt;/p&gt;

&lt;p&gt;I take the opportunity while doing this of cleaning the Title too which is prefixed with the text “GCSE 9-1 “ and suffixed with the text “ I Year9 Pred” e.g. “GCSE 9-1 Mathematics I Year9 Pred”.  I strip this out with a little regex.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-posh&quot; data-lang=&quot;posh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$Name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;@{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
            &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Expression&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
                &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-Match&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;GCSE 9-1 (?&amp;lt;Subject&amp;gt;[a-zA-Z ]+) I Year9 Pred&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                    &lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$Matches&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Subject&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$subjectHash&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;@{}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$import&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ResultFile&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;AspectNode&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Select-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-ExpandProperty&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Aspect&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Select-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Property&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ExternalId&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ForEach-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$subjectHash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ExternalId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We can now iterate over the pupils’ results forming up the data in a clean and more friendly format.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-posh&quot; data-lang=&quot;posh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$subjectFromId&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;@{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Subject&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Expression&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$subjectHash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AspectExternalId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Forename&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;@{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Forename&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Expression&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Forename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Trim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Surname&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;@{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Surname&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Expression&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Surname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Trim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Attainment&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;@{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Attainment&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Expression&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ResultValue&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$import&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ResultFile&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ResultNode&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Select-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-ExpandProperty&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Result&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Select-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Property&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DOB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Forename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Surname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Gender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$subjectFromId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Attainment&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The data can now be exported onto a JSON file or flattened into a csv or even back into XML.  However, before I export I needed to add a foreign key to match the pupils with our MIS and custom reporting system.&lt;/p&gt;

&lt;p&gt;If I cover this in another article I shall post a link here.&lt;/p&gt;

&lt;h2 id=&quot;data-acquisition&quot;&gt;Acquire Data from CEM&lt;/h2&gt;

&lt;p&gt;Head over to &lt;em&gt;Cambridge University Press&lt;/em&gt; &amp;amp; &lt;em&gt;Assessment’s Centre for Evaluation Monitoring&lt;/em&gt; and log into the &lt;a href=&quot;https://css.cemcentre.org/SecondaryPlusNet/Login.aspx&quot; target=&quot;_blank&quot;&gt;MidYIS&lt;/a&gt; portal using your school’s credentials.&lt;/p&gt;

&lt;p&gt;Drill down into the &lt;strong&gt;Reports -&amp;gt; Data and Reports&lt;/strong&gt; page&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/38/data-and-reports.png&quot; alt=&quot;Navigate to Original Excel/PDF Reports&quot; /&gt;
	&lt;figcaption&gt;
	Navigate to Original Excel/PDF Reports
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Drill down into &lt;strong&gt;Original Excel/PDF Reports&lt;/strong&gt; and download your file.&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/38/download.png&quot; alt=&quot;Download&quot; /&gt;
	&lt;figcaption&gt;
	Download
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;For example I use the &lt;strong&gt;Independent Schools’ Predictions and Chances Graphs (including MIS import files)&lt;/strong&gt; you might use a similar one.&lt;/p&gt;
</description>
        <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
        <link>https://it-trials.craigchamberlain.it/scripting/parsing-midyis-grade-exports</link>
        <guid isPermaLink="true">https://it-trials.craigchamberlain.it/scripting/parsing-midyis-grade-exports</guid>
        
        
        <category>Scripting</category>
        
      </item>
    
      <item>
        <title>Parsing and Transforming ALIS grade export data</title>
        <description>&lt;h2 id=&quot;problem&quot;&gt;Problem:&lt;/h2&gt;
&lt;p&gt;At the school at which I work, we had no way of importing our baseline &lt;a href=&quot;https://www.cem.org/ALIS&quot; target=&quot;_blank&quot;&gt;ALIS&lt;/a&gt; scores into our MIS and other custom reporting tools.  At times this information was simply input by hand into forms in the MIS.  I decided to work out how to parse exports so that this was not necessary.  I have a &lt;a href=&quot;/scripting/parsing-midyis-grade-exports&quot; target=&quot;_blank&quot;&gt;partner article on the MidYIS baseline system&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution:&lt;/h2&gt;
&lt;p&gt;I will add an appendix with &lt;a href=&quot;#data-acquisition&quot;&gt;instructions on how I acquired the data&lt;/a&gt; but will dive straight into the implementation of how I chose to parse and transform&lt;/p&gt;

&lt;p&gt;Once you have your file, open and save as xlsx.  The OpenOfficeSDK used in the &lt;a href=&quot;https://www.powershellgallery.com/packages/ImportExcel&quot; target=&quot;_blank&quot;&gt;ImportExcel module&lt;/a&gt; cannot open xls files.  You may need to install the module&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-posh&quot; data-lang=&quot;posh&quot;&gt;&lt;span class=&quot;n&quot;&gt;Install-Module&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ImportExcel&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now load the file up in PowerShell.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-posh&quot; data-lang=&quot;posh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$import&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Open-ExcelPackage&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.\AlisExport.xlsx&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The data is flat, many lines per pupil per subject.  I find a graph structure more convenient and so populate a HashTable as I iterate over each line, skipping the first 5.  I use a complex key for my HashTable using all the information I will need to match the pupils against my MIS.&lt;/p&gt;

&lt;p&gt;Although I iterate over Column B, I use each cells row ID to jump to other cells in the row to pick out other data of interest.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-posh&quot; data-lang=&quot;posh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$PredictedGradeHash&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;@{}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$import&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Workbook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Worksheets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Sheet1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Cells&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;B:B&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ForEach-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$row&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Row&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$row&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-gt&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PupilName&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Gender&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$import&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Workbook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Worksheets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Sheet1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Cells&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;C&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$row&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$DOB&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$import&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Workbook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Worksheets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Sheet1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Cells&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;D&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$row&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$pupilId&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PupilName&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;::&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Gender&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;::&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$DOB&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-not&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PredictedGradeHash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ContainsKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$pupilId&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)){&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PredictedGradeHash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$pupilId&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;@{})&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Subject&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$import&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Workbook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Worksheets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Sheet1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Cells&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;G&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$row&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$AlisPredictedGrade&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$import&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Workbook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Worksheets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Sheet1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Cells&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;N&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$row&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PredictedGradeHash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$pupilId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Subject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$AlisPredictedGrade&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You may now export this or process further to match your pupils to another system.  If I cover this in another article I shall post a link here.&lt;/p&gt;

&lt;h2 id=&quot;data-acquisition&quot;&gt;Acquire Data from CEM&lt;/h2&gt;

&lt;p&gt;Head over to &lt;em&gt;Cambridge University Press&lt;/em&gt; &amp;amp; &lt;em&gt;Assessment’s Centre for Evaluation Monitoring&lt;/em&gt; and log into the &lt;a href=&quot;https://css.cemcentre.org/ALIS/Site/LoginTemplate.aspx&quot; target=&quot;_blank&quot;&gt;Alis&lt;/a&gt; portal using your school’s credentials.&lt;/p&gt;

&lt;p&gt;Drill down into the &lt;strong&gt;Reports -&amp;gt; Predictive Data&lt;/strong&gt; page&lt;/p&gt;
&lt;figure&gt;
	&lt;img src=&quot;/assets/images/37/data-and-reports.png&quot; alt=&quot;Navigate to Original Excel/PDF Reports&quot; /&gt;
	&lt;figcaption&gt;
	Navigate to Original Excel/PDF Reports
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Look for &lt;strong&gt;Predictions - Spreadsheet&lt;/strong&gt;&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/37/download.png&quot; alt=&quot;Download&quot; /&gt;
	&lt;figcaption&gt;
	Download
	&lt;/figcaption&gt;
&lt;/figure&gt;
</description>
        <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
        <link>https://it-trials.craigchamberlain.it/scripting/parsing-alis-grade-exports</link>
        <guid isPermaLink="true">https://it-trials.craigchamberlain.it/scripting/parsing-alis-grade-exports</guid>
        
        
        <category>Scripting</category>
        
      </item>
    
      <item>
        <title>Making a PowerQuery (M) Http POST Request</title>
        <description>&lt;h2 id=&quot;problem&quot;&gt;Problem:&lt;/h2&gt;
&lt;p&gt;PowerBi makes it very easy for you to make http &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GET&lt;/code&gt; requests, which can sometimes be done simply from navigating through a GUI.&lt;/p&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/29/gui.jpg&quot; alt=&quot;screenshot of the PowerBi Web Source GUI&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;I talked about this process briefly in a &lt;a href=&quot;/powerbi/iterating-over-multiple-endpoints-in-powerbi&quot;&gt;previous blog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;However, some &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;REST&lt;/code&gt; or other data APIs require a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;POST&lt;/code&gt; request for example a request with a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;JSON&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;XML&lt;/code&gt; body.&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution:&lt;/h2&gt;

&lt;p&gt;I found a &lt;a href=&quot;https://community.powerbi.com/t5/Desktop/How-to-run-POST-request-in-M/td-p/457138&quot; target=&quot;_blank&quot;&gt;recommendation on the PowerBi Community page&lt;/a&gt; to add a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Content&lt;/code&gt; parameter to the request.&lt;/p&gt;

&lt;p&gt;It is worth referring to the &lt;a href=&quot;https://docs.microsoft.com/en-us/powerquery-m/web-contents&quot; target=&quot;_blank&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Web.Conents()&lt;/code&gt;&lt;/a&gt; API to understand this.&lt;/p&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/36/web-contents-api.jpg&quot; alt=&quot;screenshot of the official docs of the Web.Conents Function&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;As we can see &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Web.Conents&lt;/code&gt; has an optional &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Options&lt;/code&gt; parameter of record type.  There are various options we can set here including the Header which itself a record type. Although it doesn’t say here, the Content parameter is of binary type, as explained by &lt;a href=&quot;https://de.linkedin.com/in/imkefeldmann&quot; target=&quot;_blank&quot;&gt;Imke Feldmann&lt;/a&gt; at the &lt;a href=&quot;https://www.thebiccountant.com/2018/06/05/easy-post-requests-with-power-bi-and-power-query-using-json-fromvalue/&quot; target=&quot;_blank&quot;&gt;BICCOUNTANT&lt;/a&gt;.  Therefore you must turn an arbitrary text value into binary with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Text.ToBinary()&lt;/code&gt; or produce a JSON or XML response from table data.&lt;/p&gt;

&lt;p&gt;Here is a basic an example function that performs a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;POST&lt;/code&gt; request with an XML body that includes a variable provided by a function parameter:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powerquery&quot; data-lang=&quot;powerquery&quot;&gt;let GetReports = (Id as number) =&amp;gt;

    let
    //Parameters
        ClientSecret = &quot;XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX&quot;,
    //Variables
        Url = &quot;https://example.domain/resource?apiKey=&quot;&amp;amp; ClientSecret,
        Request = &quot;&amp;lt;?xml version=&quot;&quot;1.0&quot;&quot; encoding=&quot;&quot;utf-8&quot;&quot; ?&amp;gt;
    &amp;lt;YourTag&amp;gt;
        &amp;lt;YourData meta=&quot;&quot;&quot;&amp;amp; Number.ToText(Id) &amp;amp;&quot;&quot;&quot; Status=&quot;&quot;1&quot;&quot; /&amp;gt;
    &amp;lt;/YourTag&amp;gt;&quot;,
           Source = Json.Document(Web.Contents(Url, [Content=Text.ToBinary(Request)]))
    in  Source

in GetReports&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;pitfalls&quot;&gt;Pitfalls:&lt;/h2&gt;

&lt;p&gt;If you are working with string literals be careful to escape internal &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;&lt;/code&gt; by simply doubling the double quote &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;&quot;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Ben Gribaudo has a &lt;a href=&quot;https://bengribaudo.com/blog/2018/06/26/4470/power-query-m-primer-part6-types-intro-text&quot; target=&quot;_blank&quot;&gt;great primer over at his blog&lt;/a&gt; on working with and escaping characters in strings.&lt;/p&gt;
</description>
        <pubDate>Mon, 04 Jan 2021 00:00:00 +0000</pubDate>
        <link>https://it-trials.craigchamberlain.it/powerbi/making-a-powerquery-post-request</link>
        <guid isPermaLink="true">https://it-trials.craigchamberlain.it/powerbi/making-a-powerquery-post-request</guid>
        
        
        <category>PowerBI</category>
        
      </item>
    
      <item>
        <title>Querying the gov.uk website for COVID-19 Tier by PostCode</title>
        <description>&lt;h2 id=&quot;problem&quot;&gt;Problem:&lt;/h2&gt;
&lt;p&gt;The UK Government has a special &lt;a href=&quot;https://coronavirus.data.gov.uk/&quot;&gt;COVID-19 Data Website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It has a handy tool to pull up local information given a particular.&lt;/p&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/35/search-by-postcode.jpg&quot; alt=&quot;closeup of tool on the https://coronavirus.data.gov.uk/ website&quot; /&gt;&lt;figcaption&gt;
      Look up a COVID-19 summary by postcode

    &lt;/figcaption&gt;&lt;/figure&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/35/summary.jpg&quot; alt=&quot;closeup of custom dashboard on the https://coronavirus.data.gov.uk/ website&quot; /&gt;&lt;figcaption&gt;
      You are presented with a custom dashboard for the region the postcode falls within

    &lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;However, if you want to look up a collection of postcodes this process might be time consuming. There is an API and &lt;a href=&quot;https://coronavirus.data.gov.uk/details/developers-guide&quot; target=&quot;_blank&quot;&gt;docs provided&lt;/a&gt;.  However, I could not see an endpoint that took a postcode.&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution:&lt;/h2&gt;

&lt;p&gt;Fortunately, the custom postcode dashboards are accessible by a query string.  So we can work through a set of postcodes by making a series of get requests.&lt;/p&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/35/query-string.jpg&quot; alt=&quot;closeup of custom dashboard on the https://coronavirus.data.gov.uk/ website&quot; /&gt;&lt;figcaption&gt;
      Note the end &lt;code&gt;?postcode=DL10+6DN&lt;/code&gt;

    &lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;I put together a minimal viable powershell script.  I will not explain every step here but it uses the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Invoke-WebRequest&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cmcmdlet&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GET&lt;/code&gt; and parse the webpage, drill into the required page elements and interpret the human readable text into structured data.  There is quite a lot of Regex for validation and data scraping which I plan to cover in another post.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/24be9c7ffb28a0c7f2b5cdaaed87c89a.js&quot;&gt; &lt;/script&gt;

&lt;h2 id=&quot;pitfalls&quot;&gt;Pitfalls:&lt;/h2&gt;

&lt;p&gt;Invoke-WebRequest and the automatic parser are not especially quick or optimised.  For heavy use it would be better to write a custom tool using a common &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.NET HttpClient&lt;/code&gt; with parallel execution and an optimised scraper.&lt;/p&gt;

&lt;p&gt;As my address list contained duplicate postcodes, I first made a list of unique postcodes and then constructed a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Hashtable&lt;/code&gt; with the results of my above script per postcode.  I then join this &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Hashtable&lt;/code&gt; to the original set to avoid repeated lookups of the same postcode.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/500496f9424b42a32153e591f6e577b8.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Another advantage is that you can investigate missing values without iterating over the entire set of postcodes.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$problemPostCode&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dict&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetEnumerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-eq&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$problemTier&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dict&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetEnumerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;covidTier&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-eq&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# Attempt to correct missing values&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$problemTier&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;\Get-CoronovirusGovData.ps1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Key&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;There are other data points on the page that could be scraped.  However, at this point we have a geographic area for each postcode.  We would be far better served using this to query the API and obtain the structured data directly.&lt;/p&gt;
</description>
        <pubDate>Tue, 22 Dec 2020 00:00:00 +0000</pubDate>
        <link>https://it-trials.craigchamberlain.it/scripting/covid-tier-from-postcode</link>
        <guid isPermaLink="true">https://it-trials.craigchamberlain.it/scripting/covid-tier-from-postcode</guid>
        
        
        <category>Scripting</category>
        
      </item>
    
      <item>
        <title>AD User Account Status in PowerBI Model</title>
        <description>&lt;h2 id=&quot;problem&quot;&gt;Problem:&lt;/h2&gt;
&lt;p&gt;I my previous posts I covered connecting PowerBI to AD and forming and returning user account data.&lt;/p&gt;

&lt;p&gt;However, on inspecting the results it is not clear if users are enabled, disabled or in any other given state.  This might be really important if you are attempting to use PowerBi to reconcile HR or other databases to ensure consistency.&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution:&lt;/h2&gt;

&lt;p&gt;The account status is quite readily accessible in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;userAccountControl&lt;/code&gt; item of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;user&lt;/code&gt; record.&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/34/user-account-control.jpg&quot; /&gt;
	&lt;figcaption&gt;
	Drill into the user column to find the userAccountControl field
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;However, userAccountControl is a &lt;a href=&quot;&amp;quot;https://en.wikipedia.org/wiki/Mask_(computing)&amp;quot;&quot; target=&quot;_blank&quot;&gt;bit mask&lt;/a&gt; and is not immediately comprehensible.&lt;/p&gt;

&lt;p&gt;Some posts provide a simple explanation that 512 is enabled and 514 is disabled.  This is true, but not the complete story. This value actually encodes boolean values for 22 potentially independent options. Therefore there are 2^22 or 4,194,304 possible permutations of this number half of which are disabled, half of which are enabled.&lt;/p&gt;

&lt;p&gt;Given the ponderous number of permutations and the relative unlikely occurrence of most of them it makes much more sense to extract meaning from the result using logic than using a related table.&lt;/p&gt;

&lt;p&gt;Windows OS Hub have published an excellent article on this with a &lt;a href=&quot;&amp;quot;http://woshub.com/decoding-ad-useraccountcontrol-value/&amp;quot;&quot; target=&quot;_blank&quot;&gt;PowerShell function&lt;/a&gt; &lt;a href=&quot;&amp;quot;http://woshub.com/decoding-ad-useraccountcontrol-value/&amp;quot;&quot; target=&quot;_blank&quot;&gt;PowerShell function&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My first solution was to manually create a table limited to just the values that occur in my active directory, using the above PowerShell function, creating my own a pretty name and a boolean field to say if the account is disabled or enabled.&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/34/account-status.jpg&quot; /&gt;
	&lt;figcaption&gt;
	Form a many to one relationship between the OU table and the User table
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;This works perfectly well but I may have to add further rows as my active directory hosts more account status combinations.&lt;/p&gt;

&lt;p&gt;It would be straight forward to make a function, using a bitwise operator, that determined if any given account was disabled or not.  This work be ideal as a custom column on your user table.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powerquery&quot; data-lang=&quot;powerquery&quot;&gt;= (UAC as number)  =&amp;gt;
    Number.BitwiseAnd(UAC, 2) = 2&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;To cover all eventualities, and provide the most options for filtering and chopping your user table, we could dynamically create a related table to help us resolve the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;userAccountControl&lt;/code&gt; bit map.&lt;/p&gt;

&lt;p&gt;To start the process, I ported the Windows OS Hub, PowerShell function into PowerQuery.  I chose to return a list, rather than a combined string as it gives us the option to create a many to many relationship later on or serialise in a different form at a later point.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powerquery&quot; data-lang=&quot;powerquery&quot;&gt;= (UAC as number) as list =&amp;gt;
let 
  flags = {
    &quot;SCRIPT&quot;,
    &quot;ACCOUNTDISABLE&quot;,
    &quot;RESERVED&quot;,
    &quot;HOMEDIR_REQUIRED&quot;,
    &quot;LOCKOUT&quot;,
    &quot;PASSWD_NOTREQD&quot;,
    &quot;PASSWD_CANT_CHANGE&quot;,
    &quot;ENCRYPTED_TEXT_PWD_ALLOWED&quot;,
    &quot;TEMP_DUPLICATE_ACCOUNT&quot;,
    &quot;NORMAL_ACCOUNT&quot;,
    &quot;RESERVED&quot;,
    &quot;INTERDOMAIN_TRUST_ACCOUNT&quot;,
    &quot;WORKSTATION_TRUST_ACCOUNT&quot;,
    &quot;SERVER_TRUST_ACCOUNT&quot;,
    &quot;RESERVED&quot;,
    &quot;RESERVED&quot;,
    &quot;DONT_EXPIRE_PASSWORD&quot;,
    &quot;MNS_LOGON_ACCOUNT&quot;,
    &quot;SMARTCARD_REQUIRED&quot;,
    &quot;TRUSTED_FOR_DELEGATION&quot;,
    &quot;NOT_DELEGATED&quot;,
    &quot;USE_DES_KEY_ONLY&quot;,
    &quot;DONT_REQ_PREAUTH&quot;,
    &quot;PASSWORD_EXPIRED&quot;,
    &quot;TRUSTED_TO_AUTH_FOR_DELEGATION&quot;,
    &quot;RESERVED&quot;,
    &quot;PARTIAL_SECRETS_ACCOUNT&quot;,
    &quot;RESERVED&quot;,
    &quot;RESERVED&quot;,
    &quot;RESERVED&quot;,
    &quot;RESERVED&quot;,
    &quot;RESERVED&quot;
  },
  attributes = &quot;&quot;,
  enumerable = List.Numbers(0,List.Count(flags)),
  itterateBitMap = 
    List.Select(
      enumerable, 
      each Number.BitwiseAnd(UAC, Number.Power(2,_)) &amp;lt;&amp;gt; 0
    ),
  filteredFlags = List.Transform(itterateBitMap, each flags{_} )
in
  filteredFlags&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now we can then generate a the set of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;userAccountControl&lt;/code&gt; bit maps our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ActiveDirectory&lt;/code&gt; currently contains and produce a computed result for each.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powerquery&quot; data-lang=&quot;powerquery&quot;&gt;= let
userAccountControlCodes = List.RemoveNulls(List.Distinct(Table.Column(AllADUsers,&quot;userAccountControl&quot;))),
table1 = Table.FromList(userAccountControlCodes, Splitter.SplitByNothing(), {&quot;userAccountControlCodes&quot;}, null, ExtraValues.Error)
in 
Table.AddColumn(table1, &quot;DecodedUAC&quot;, each DecodeUserAccountControl(_[userAccountControlCodes]) )&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/34/resolved-user-account-control-bit-map.jpg&quot; /&gt;
	&lt;figcaption&gt;
	A Dynamically Produced Table of All the Required userAccountControl Values and a human readable representation
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;At this point you may prefer to serialise the lists.  I recommend that you &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Expand to New Rows&lt;/code&gt; and use this to create a many to many relationship to your user table in PowerBI.&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/34/resolved-user-account-control-bit-map-expanded.jpg&quot; /&gt;
	&lt;figcaption&gt;
	A dynamically produced table of all the Required userAccountControl values and a human readable representation
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2&gt;Other Posts in the PowerBI-AD Series:&lt;/h2&gt;

&lt;ul&gt;


&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-account-status-related-table&quot;&gt;Trial #34: AD User Account Status in PowerBI Model&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-groups-related-table&quot;&gt;Trial #33: Querying AD Users Group Membership with PowerBI&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-ou-related-table&quot;&gt;Trial #32: Making OUs More Readable with a Related Table in PowerBI Model&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-users-in-powerbi-model-transform-cn-to-ou&quot;&gt;Trial #31: Transform Active Directory User CN to OU in PowerBI Model&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-users-in-powerbi-model&quot;&gt;Trial #30: Accessing Active Directory Users in PowerBI Model&lt;/a&gt;&lt;/li&gt;

&lt;/ul&gt;
</description>
        <pubDate>Mon, 30 Nov 2020 00:00:00 +0000</pubDate>
        <link>https://it-trials.craigchamberlain.it/powerbi/active-directory-account-status-related-table</link>
        <guid isPermaLink="true">https://it-trials.craigchamberlain.it/powerbi/active-directory-account-status-related-table</guid>
        
        
        <category>PowerBI</category>
        
      </item>
    
      <item>
        <title>Querying AD Users Group Membership with PowerBI</title>
        <description>&lt;h2 id=&quot;problem&quot;&gt;Problem:&lt;/h2&gt;
&lt;p&gt;Group membership can be found quite deep inside the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;securityPrincipal&lt;/code&gt; record of an AD user.  There are two lists &lt;a href=&quot;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-ada2/58205720-cfeb-44bf-9b69-731898a2c750&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;msds-tokenGroupNamesGlobalAndUniversal&lt;/code&gt;&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-ada2/c2ec9a10-c670-423a-b542-43b8af712ed2&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;msds-tokenGroupNamesNoGCAcceptable&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I found these groups lists largely symmetrical but unfortunately but both contained unique values so for completeness, we may need to &lt;a href=&quot;https://docs.microsoft.com/en-us/powerquery-m/list-union&quot;&gt;Union&lt;/a&gt; these lists.&lt;/p&gt;

&lt;p&gt;Furthermore, this combined list is not particularly useful until it is serialised into a single column or preferably accessed using a related table.&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution:&lt;/h2&gt;

&lt;p&gt;First of all, as the lists &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;msds-tokenGroupNamesGlobalAndUniversal&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;msds-tokenGroupNamesNoGCAcceptable&lt;/code&gt; are nullable we need to guard against this case and only return sub-item, such as the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Common Name&lt;/code&gt; when there are items to iterate over.&lt;/p&gt;

&lt;p&gt;Rather than writing the same code out twice for each list, lets make a function.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powerquery&quot; data-lang=&quot;powerquery&quot;&gt;// GetGroups
= (securityPrincipal as record, itemName as text) as list =&amp;gt;
    if Record.Field(securityPrincipal, itemName) = null
    then {}
    else List.Transform(Record.Field(securityPrincipal, itemName), each _[cn])&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We can then use this function to create a custom column combining the results of the union of the transformed lists.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powerquery&quot; data-lang=&quot;powerquery&quot;&gt;= Table.AddColumn(
    #&quot;Table1&quot;, 
    &quot;Custom&quot;, 
    each 
       List.Union({
         GetGroups( _[securityPrincipal] ,&quot;msds-tokenGroupNamesGlobalAndUniversal&quot;),
         GetGroups( _[securityPrincipal] ,&quot;msds-tokenGroupNamesNoGCAcceptable&quot;)
       })
)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;At this point you may either flatten the list by serialising, if you have many columns in the table you want to use, or preferably by expansion, combining a new single purpose table back with your user table in a PowerQuery many to one relationship.&lt;/p&gt;

&lt;h3 id=&quot;option-1&quot;&gt;Option 1#&lt;/h3&gt;
&lt;figure&gt;
	&lt;img src=&quot;/assets/images/33/extract-values.jpg&quot; /&gt;
	&lt;figcaption&gt;
	Select the created column and extract values
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/33/choose-delimiter.jpg&quot; /&gt;
	&lt;figcaption&gt;
	Choose a delimiter that is unlikely to occur in any of your group names, such as &apos;;&apos;
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3 id=&quot;option-2&quot;&gt;Option 2#&lt;/h3&gt;
&lt;p&gt;However I would strongly recommend creating a simple table to use in a relationship.  For example create a table with just two columns, a foreign key such as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;distinguishedName&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sAMAcountName.&lt;/code&gt; and the expanded list of groups.&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/33/expand-column.jpg&quot; /&gt;
	&lt;figcaption&gt;
	Expanding the column, creates duplicate entries in the remaining columns so this method is best attempted with a limited number of columns.  Perhaps just a foreign key such as ````distinguishedName```` or ````sAMAcountName.````
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/33/relationship.jpg&quot; /&gt;
	&lt;figcaption&gt;
	This method will give you far greater control of how you select on and display the security group information.
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2&gt;Other Posts in the PowerBI-AD Series:&lt;/h2&gt;

&lt;ul&gt;


&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-account-status-related-table&quot;&gt;Trial #34: AD User Account Status in PowerBI Model&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-groups-related-table&quot;&gt;Trial #33: Querying AD Users Group Membership with PowerBI&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-ou-related-table&quot;&gt;Trial #32: Making OUs More Readable with a Related Table in PowerBI Model&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-users-in-powerbi-model-transform-cn-to-ou&quot;&gt;Trial #31: Transform Active Directory User CN to OU in PowerBI Model&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-users-in-powerbi-model&quot;&gt;Trial #30: Accessing Active Directory Users in PowerBI Model&lt;/a&gt;&lt;/li&gt;

&lt;/ul&gt;
</description>
        <pubDate>Sun, 29 Nov 2020 00:00:00 +0000</pubDate>
        <link>https://it-trials.craigchamberlain.it/powerbi/active-directory-groups-related-table</link>
        <guid isPermaLink="true">https://it-trials.craigchamberlain.it/powerbi/active-directory-groups-related-table</guid>
        
        
        <category>PowerBI</category>
        
      </item>
    
      <item>
        <title>Making OUs More Readable with a Related Table in PowerBI Model</title>
        <description>&lt;h2 id=&quot;problem&quot;&gt;Problem:&lt;/h2&gt;
&lt;p&gt;I my previous posts I covered connecting PowerBI to AD and forming an custom “OU” column.&lt;/p&gt;

&lt;p&gt;The values in this “OU” column do not look great in reports if we want to select our users by OU, it would be preferable to have something neater.&lt;/p&gt;

&lt;p&gt;For example:
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Staff&lt;/code&gt; looks better &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OU=Staff,CN=Users,DC=domain,DC=local&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution:&lt;/h2&gt;

&lt;p&gt;You could certainly achieve this by manipulating the string manually or having a series of nested &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;if/then/else&lt;/code&gt; statements, matching your OU’s against desired outputs.&lt;/p&gt;

&lt;p&gt;However, AD already stores a name for each OU, which will has the great benefit of staying in sync with the user objects we are querying.&lt;/p&gt;

&lt;p&gt;Therefore, I chose to create an additional table in the PowerQuery Editor, and then form a relationship between this and my user table in the PowerBI model linked on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;distinguishedName&lt;/code&gt; of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OU&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The OU table is called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;organizationalUnit&lt;/code&gt;.&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/32/ou-table.jpg&quot; /&gt;
	&lt;figcaption&gt;
	Selecting the organizationalUnit table from your domain&apos;s ActiveDirectory
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/32/ou-relationship.jpg&quot; /&gt;
	&lt;figcaption&gt;
	Form a many to one relationship between the OU table and the User table
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;On loading the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;organizationalUnit&lt;/code&gt; from your domain delete superfluous columns “top”, “displayName”, “msExchBaseClass”.&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/32/delete-columns.jpg&quot; /&gt;
	&lt;figcaption&gt;
	Delete Superfluous Columns Leaving organizationalUnit and distinguishedName
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/32/add-column.jpg&quot; /&gt;
	&lt;figcaption&gt;
	Add a Custom Column that drills down into organizationalUnit and return the list, or the first object in it.
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Finally remove the organizationalUnit column.&lt;/p&gt;

&lt;p&gt;This produces the following &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PowerQuery&lt;/code&gt; expression&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powerquery&quot; data-lang=&quot;powerquery&quot;&gt;let
    Source = ActiveDirectory.Domains(&quot;domain.local&quot;),
    #&quot;domain&quot; = Source{[Domain=&quot;domain.local&quot;]}[Object Categories],
    organizationalUnit1 = #&quot;domain&quot;{[Category=&quot;organizationalUnit&quot;]}[Objects],
    #&quot;Removed Columns&quot; = Table.RemoveColumns(organizationalUnit1,{&quot;top&quot;, &quot;displayName&quot;, &quot;msExchBaseClass&quot;}),
    #&quot;Added Custom&quot; = Table.AddColumn(#&quot;Removed Columns&quot;, &quot;Name&quot;, each List.First([organizationalUnit][ou])),
    #&quot;Removed Columns1&quot; = Table.RemoveColumns(#&quot;Added Custom&quot;,{&quot;organizationalUnit&quot;})
in
    #&quot;Removed Columns1&quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;pitfalls&quot;&gt;Pitfalls:&lt;/h2&gt;

&lt;p&gt;This is really straight forward.  The one thing that might not be ideal is returning the first item of the list contained in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ou&lt;/code&gt; object. There may be some instances where the list contains more than one item and you want them all or one other than the first.&lt;/p&gt;

&lt;h2&gt;Other Posts in the PowerBI-AD Series:&lt;/h2&gt;

&lt;ul&gt;


&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-account-status-related-table&quot;&gt;Trial #34: AD User Account Status in PowerBI Model&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-groups-related-table&quot;&gt;Trial #33: Querying AD Users Group Membership with PowerBI&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-ou-related-table&quot;&gt;Trial #32: Making OUs More Readable with a Related Table in PowerBI Model&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-users-in-powerbi-model-transform-cn-to-ou&quot;&gt;Trial #31: Transform Active Directory User CN to OU in PowerBI Model&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-users-in-powerbi-model&quot;&gt;Trial #30: Accessing Active Directory Users in PowerBI Model&lt;/a&gt;&lt;/li&gt;

&lt;/ul&gt;
</description>
        <pubDate>Sat, 28 Nov 2020 00:00:00 +0000</pubDate>
        <link>https://it-trials.craigchamberlain.it/powerbi/active-directory-ou-related-table</link>
        <guid isPermaLink="true">https://it-trials.craigchamberlain.it/powerbi/active-directory-ou-related-table</guid>
        
        
        <category>PowerBI</category>
        
      </item>
    
  </channel>
</rss>
