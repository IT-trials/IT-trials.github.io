<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>IT Trials</title>
    <description>Journal Blog for the trials and errors of a Sysadmin.
</description>
    <link>https://it-trials.craigchamberlain.it/</link>
    <atom:link href="https://it-trials.craigchamberlain.it/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Tue, 22 Nov 2022 12:52:38 +0000</pubDate>
    <lastBuildDate>Tue, 22 Nov 2022 12:52:38 +0000</lastBuildDate>
    <generator>Jekyll v4.3.1</generator>
    
      <item>
        <title>Parsing and Transforming MidYIS grade export data</title>
        <description>&lt;h2 id=&quot;problem&quot;&gt;Problem:&lt;/h2&gt;
&lt;p&gt;At the school at which I work, we had no way of importing our baseline &lt;a href=&quot;https://www.cem.org/midyis&quot;&gt;MidYIS&lt;/a&gt; scores into our MIS and other custom reporting tools.  At times this information was simply input by hand into forms in the MIS.  I decided to work out how to parse exports so that this was not necessary.  I have a &lt;a href=&quot;/scripting/parsing-alis-grade-exports&quot;&gt;partner article on the ALIS baseline system&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution:&lt;/h2&gt;
&lt;p&gt;I will add an appendix with &lt;a href=&quot;#data-acquisition&quot;&gt;instructions on how I acquired the data&lt;/a&gt; but will dive straight into the implementation of how I chose to parse and transform&lt;/p&gt;

&lt;p&gt;Once you have your file for example &lt;strong&gt;MidYIS Year9 Predictions Feedback.xls&lt;/strong&gt; you may need to unblock a windows security lock and enable content:&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/38/unblock.png&quot; alt=&quot;Unblock&quot; /&gt;
	&lt;figcaption&gt;
	Unblock
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/38/enable-content.png&quot; alt=&quot;Enable Content&quot; /&gt;
	&lt;figcaption&gt;
	Enable Content
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Choose the Appropriate Tab e.g. &lt;strong&gt;GCSE (9-1) Preds&lt;/strong&gt; and then select &lt;strong&gt;Generate File for MIS Import&lt;/strong&gt;.&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/38/navigate-tab.png&quot; alt=&quot;Choose the Appropriate Tab&quot; /&gt;
	&lt;figcaption&gt;
	Choose the Appropriate Tab
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/38/generate-xml.png&quot; alt=&quot;Generate XML&quot; /&gt;
	&lt;figcaption&gt;
	Generate XML
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3 id=&quot;interpreting-the-file-with-powershell&quot;&gt;Interpreting the file with PowerShell&lt;/h3&gt;

&lt;p&gt;You can use the .NET  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;XML&lt;/code&gt; type to get a structured object from a valid XML document e.g. If you are working with a huge file you could be more careful and scan through a memory stream for the content of interest.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-posh&quot; data-lang=&quot;posh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$import&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;XML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Get-Content&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.\PredIE9XML_00069772.xml&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If we explore the data we can traverse to a Node containing all of our predicted results.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-posh&quot; data-lang=&quot;posh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$import&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ResultFile&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ResultNode&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A single child Node of this contains all the data associated to a particular pupil in the result node.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-posh&quot; data-lang=&quot;posh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$import&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ResultFile&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ResultNode&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Result&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;However, many of the fields have values that I wish to tidy up.  Chief amongst this is the subject title which is normalised across another node which must be referenced by a foreign key, the &lt;strong&gt;AspectExternalId&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The subjects are stored in the &lt;strong&gt;AspectNode&lt;/strong&gt; and the content of a single subject in the child node &lt;strong&gt;Aspect&lt;/strong&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-posh&quot; data-lang=&quot;posh&quot;&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ResultFile&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;AspectNode&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ResultFile&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;AspectNode&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Aspect&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;One could find the relevant Aspect using a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Where-Object&lt;/code&gt; but this is inefficient and will require excessive enumeration.&lt;/p&gt;

&lt;p&gt;A more efficient way of doing this is to enumerate the Aspects once and assemble a HashTable table keyed on the primary key.&lt;/p&gt;

&lt;p&gt;I take the opportunity while doing this of cleaning the Title too which is prefixed with the text “GCSE 9-1 “ and suffixed with the text “ I Year9 Pred” e.g. “GCSE 9-1 Mathematics I Year9 Pred”.  I strip this out with a little regex.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-posh&quot; data-lang=&quot;posh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$Name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;@{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
            &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Expression&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
                &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-Match&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;GCSE 9-1 (?&amp;lt;Subject&amp;gt;[a-zA-Z ]+) I Year9 Pred&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                    &lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$Matches&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Subject&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$subjectHash&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;@{}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$import&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ResultFile&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;AspectNode&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Select-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-ExpandProperty&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Aspect&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Select-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Property&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ExternalId&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ForEach-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$subjectHash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ExternalId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We can now iterate over the pupils’ results forming up the data in a clean and more friendly format.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-posh&quot; data-lang=&quot;posh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$subjectFromId&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;@{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Subject&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Expression&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$subjectHash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AspectExternalId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Forename&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;@{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Forename&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Expression&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Forename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Trim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Surname&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;@{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Surname&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Expression&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Surname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Trim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Attainment&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;@{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Attainment&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Expression&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ResultValue&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$import&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ResultFile&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ResultNode&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Select-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-ExpandProperty&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Result&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Select-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Property&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DOB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Forename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Surname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Gender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$subjectFromId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Attainment&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The data can now be exported onto a JSON file or flattened into a csv or even back into XML.  However, before I export I needed to add a foreign key to match the pupils with our MIS and custom reporting system.&lt;/p&gt;

&lt;p&gt;If I cover this in another article I shall post a link here.&lt;/p&gt;

&lt;h2 id=&quot;data-acquisition&quot;&gt;Acquire Data from CEM&lt;/h2&gt;

&lt;p&gt;Head over to &lt;em&gt;Cambridge University Press&lt;/em&gt; &amp;amp; &lt;em&gt;Assessment’s Centre for Evaluation Monitoring&lt;/em&gt; and log into the &lt;a href=&quot;https://css.cemcentre.org/SecondaryPlusNet/Login.aspx&quot;&gt;MidYIS&lt;/a&gt; portal using your school’s credentials.&lt;/p&gt;

&lt;p&gt;Drill down into the &lt;strong&gt;Reports -&amp;gt; Data and Reports&lt;/strong&gt; page&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/38/data-and-reports.png&quot; alt=&quot;Navigate to Original Excel/PDF Reports&quot; /&gt;
	&lt;figcaption&gt;
	Navigate to Original Excel/PDF Reports
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Drill down into &lt;strong&gt;Original Excel/PDF Reports&lt;/strong&gt; and download your file.&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/38/download.png&quot; alt=&quot;Download&quot; /&gt;
	&lt;figcaption&gt;
	Download
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;For example I use the &lt;strong&gt;Independent Schools’ Predictions and Chances Graphs (including MIS import files)&lt;/strong&gt; you might use a similar one.&lt;/p&gt;
</description>
        <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
        <link>https://it-trials.craigchamberlain.it/scripting/parsing-midyis-grade-exports</link>
        <guid isPermaLink="true">https://it-trials.craigchamberlain.it/scripting/parsing-midyis-grade-exports</guid>
        
        
        <category>scripting</category>
        
      </item>
    
      <item>
        <title>Parsing and Transforming ALIS grade export data</title>
        <description>&lt;h2 id=&quot;problem&quot;&gt;Problem:&lt;/h2&gt;
&lt;p&gt;At the school at which I work, we had no way of importing our baseline &lt;a href=&quot;https://www.cem.org/ALIS&quot;&gt;ALIS&lt;/a&gt; scores into our MIS and other custom reporting tools.  At times this information was simply input by hand into forms in the MIS.  I decided to work out how to parse exports so that this was not necessary.  I have a &lt;a href=&quot;/scripting/parsing-midyis-grade-exports&quot;&gt;partner article on the MidYIS baseline system&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution:&lt;/h2&gt;
&lt;p&gt;I will add an appendix with &lt;a href=&quot;#data-acquisition&quot;&gt;instructions on how I acquired the data&lt;/a&gt; but will dive straight into the implementation of how I chose to parse and transform&lt;/p&gt;

&lt;p&gt;Once you have your file, open and save as xlsx.  The OpenOfficeSDK used in the &lt;a href=&quot;https://www.powershellgallery.com/packages/ImportExcel&quot;&gt;ImportExcel module&lt;/a&gt; cannot open xls files.  You may need to install the module&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-posh&quot; data-lang=&quot;posh&quot;&gt;&lt;span class=&quot;n&quot;&gt;Install-Module&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ImportExcel&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now load the file up in PowerShell.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-posh&quot; data-lang=&quot;posh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$import&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Open-ExcelPackage&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.\AlisExport.xlsx&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The data is flat, many lines per pupil per subject.  I find a graph structure more convenient and so populate a HashTable as I iterate over each line, skipping the first 5.  I use a complex key for my HashTable using all the information I will need to match the pupils against my MIS.&lt;/p&gt;

&lt;p&gt;Although I iterate over Column B, I use each cells row ID to jump to other cells in the row to pick out other data of interest.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-posh&quot; data-lang=&quot;posh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$PredictedGradeHash&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;@{}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$import&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Workbook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Worksheets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Sheet1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Cells&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;B:B&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ForEach-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$row&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Row&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$row&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-gt&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PupilName&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Gender&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$import&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Workbook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Worksheets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Sheet1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Cells&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;C&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$row&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$DOB&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$import&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Workbook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Worksheets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Sheet1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Cells&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;D&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$row&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$pupilId&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PupilName&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;::&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Gender&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;::&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$DOB&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-not&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PredictedGradeHash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ContainsKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$pupilId&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)){&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PredictedGradeHash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$pupilId&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;@{})&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Subject&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$import&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Workbook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Worksheets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Sheet1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Cells&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;G&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$row&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$AlisPredictedGrade&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$import&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Workbook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Worksheets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Sheet1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Cells&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;N&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$row&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PredictedGradeHash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$pupilId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Subject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$AlisPredictedGrade&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You may now export this or process further to match your pupils to another system.  If I cover this in another article I shall post a link here.&lt;/p&gt;

&lt;h2 id=&quot;data-acquisition&quot;&gt;Acquire Data from CEM&lt;/h2&gt;

&lt;p&gt;Head over to &lt;em&gt;Cambridge University Press&lt;/em&gt; &amp;amp; &lt;em&gt;Assessment’s Centre for Evaluation Monitoring&lt;/em&gt; and log into the &lt;a href=&quot;https://css.cemcentre.org/ALIS/Site/LoginTemplate.aspx&quot;&gt;Alis&lt;/a&gt; portal using your school’s credentials.&lt;/p&gt;

&lt;p&gt;Drill down into the &lt;strong&gt;Reports -&amp;gt; Predictive Data&lt;/strong&gt; page&lt;/p&gt;
&lt;figure&gt;
	&lt;img src=&quot;/assets/images/37/data-and-reports.png&quot; alt=&quot;Navigate to Original Excel/PDF Reports&quot; /&gt;
	&lt;figcaption&gt;
	Navigate to Original Excel/PDF Reports
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Look for &lt;strong&gt;Predictions - Spreadsheet&lt;/strong&gt;&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/37/download.png&quot; alt=&quot;Download&quot; /&gt;
	&lt;figcaption&gt;
	Download
	&lt;/figcaption&gt;
&lt;/figure&gt;
</description>
        <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
        <link>https://it-trials.craigchamberlain.it/scripting/parsing-alis-grade-exports</link>
        <guid isPermaLink="true">https://it-trials.craigchamberlain.it/scripting/parsing-alis-grade-exports</guid>
        
        
        <category>scripting</category>
        
      </item>
    
      <item>
        <title>Making a PowerQuery (M) Http POST Request</title>
        <description>&lt;h2 id=&quot;problem&quot;&gt;Problem:&lt;/h2&gt;
&lt;p&gt;PowerBi makes it very easy for you to make http &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GET&lt;/code&gt; requests, which can sometimes be done simply from navigating through a GUI.&lt;/p&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/29/gui.jpg&quot; alt=&quot;screenshot of the PowerBi Web Source GUI&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;I talked about this process briefly in a &lt;a href=&quot;/powerbi/iterating-over-multiple-endpoints-in-powerbi&quot;&gt;previous blog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;However, some &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;REST&lt;/code&gt; or other data APIs require a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;POST&lt;/code&gt; request for example a request with a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;JSON&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;XML&lt;/code&gt; body.&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution:&lt;/h2&gt;

&lt;p&gt;I found a &lt;a href=&quot;https://community.powerbi.com/t5/Desktop/How-to-run-POST-request-in-M/td-p/457138&quot; target=&quot;_blank&quot;&gt;recommendation on the PowerBi Community page&lt;/a&gt; to add a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Content&lt;/code&gt; parameter to the request.&lt;/p&gt;

&lt;p&gt;It is worth referring to the &lt;a href=&quot;https://docs.microsoft.com/en-us/powerquery-m/web-contents&quot; target=&quot;_blank&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Web.Conents()&lt;/code&gt;&lt;/a&gt; API to understand this.&lt;/p&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/36/web-contents-api.jpg&quot; alt=&quot;screenshot of the official docs of the Web.Conents Function&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;As we can see &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Web.Conents&lt;/code&gt; has an optional &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Options&lt;/code&gt; parameter of record type.  There are various options we can set here including the Header which itself a record type. Although it doesn’t say here, the Content parameter is of binary type, as explained by &lt;a href=&quot;https://de.linkedin.com/in/imkefeldmann&quot; target=&quot;_blank&quot;&gt;Imke Feldmann&lt;/a&gt; at the &lt;a href=&quot;https://www.thebiccountant.com/2018/06/05/easy-post-requests-with-power-bi-and-power-query-using-json-fromvalue/&quot; target=&quot;_blank&quot;&gt;BICCOUNTANT&lt;/a&gt;.  Therefore you must turn an arbitrary text value into binary with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Text.ToBinary()&lt;/code&gt; or produce a JSON or XML response from table data.&lt;/p&gt;

&lt;p&gt;Here is a basic an example function that performs a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;POST&lt;/code&gt; request with an XML body that includes a variable provided by a function parameter:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powerquery&quot; data-lang=&quot;powerquery&quot;&gt;let GetReports = (Id as number) =&amp;gt;

    let
    //Parameters
        ClientSecret = &quot;XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX&quot;,
    //Variables
        Url = &quot;https://example.domain/resource?apiKey=&quot;&amp;amp; ClientSecret,
        Request = &quot;&amp;lt;?xml version=&quot;&quot;1.0&quot;&quot; encoding=&quot;&quot;utf-8&quot;&quot; ?&amp;gt;
    &amp;lt;YourTag&amp;gt;
        &amp;lt;YourData meta=&quot;&quot;&quot;&amp;amp; Number.ToText(Id) &amp;amp;&quot;&quot;&quot; Status=&quot;&quot;1&quot;&quot; /&amp;gt;
    &amp;lt;/YourTag&amp;gt;&quot;,
           Source = Json.Document(Web.Contents(Url, [Content=Text.ToBinary(Request)]))
    in  Source

in GetReports&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;pitfalls&quot;&gt;Pitfalls:&lt;/h2&gt;

&lt;p&gt;If you are working with string literals be careful to escape internal &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;&lt;/code&gt; by simply doubling the double quote &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;&quot;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Ben Gribaudo has a &lt;a href=&quot;https://bengribaudo.com/blog/2018/06/26/4470/power-query-m-primer-part6-types-intro-text&quot; target=&quot;_blank&quot;&gt;great primer over at his blog&lt;/a&gt; on working with and escaping characters in strings.&lt;/p&gt;
</description>
        <pubDate>Mon, 04 Jan 2021 00:00:00 +0000</pubDate>
        <link>https://it-trials.craigchamberlain.it/powerbi/making-a-powerquery-post-request</link>
        <guid isPermaLink="true">https://it-trials.craigchamberlain.it/powerbi/making-a-powerquery-post-request</guid>
        
        
        <category>powerbi</category>
        
      </item>
    
      <item>
        <title>Querying the gov.uk website for COVID-19 Tier by PostCode</title>
        <description>&lt;h2 id=&quot;problem&quot;&gt;Problem:&lt;/h2&gt;
&lt;p&gt;The UK Government has a special &lt;a href=&quot;https://coronavirus.data.gov.uk/&quot;&gt;COVID-19 Data Website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It has a handy tool to pull up local information given a particular.&lt;/p&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/35/search-by-postcode.jpg&quot; alt=&quot;closeup of tool on the https://coronavirus.data.gov.uk/ website&quot; /&gt;&lt;figcaption&gt;
      Look up a COVID-19 summary by postcode

    &lt;/figcaption&gt;&lt;/figure&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/35/summary.jpg&quot; alt=&quot;closeup of custom dashboard on the https://coronavirus.data.gov.uk/ website&quot; /&gt;&lt;figcaption&gt;
      You are presented with a custom dashboard for the region the postcode falls within

    &lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;However, if you want to look up a collection of postcodes this process might be time consuming. There is an API and &lt;a href=&quot;https://coronavirus.data.gov.uk/details/developers-guide&quot; target=&quot;_blank&quot;&gt;docs provided&lt;/a&gt;.  However, I could not see an endpoint that took a postcode.&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution:&lt;/h2&gt;

&lt;p&gt;Fortunately, the custom postcode dashboards are accessible by a query string.  So we can work through a set of postcodes by making a series of get requests.&lt;/p&gt;

&lt;figure class=&quot;&quot;&gt;
  &lt;img src=&quot;/assets/images/35/query-string.jpg&quot; alt=&quot;closeup of custom dashboard on the https://coronavirus.data.gov.uk/ website&quot; /&gt;&lt;figcaption&gt;
      Note the end &lt;code&gt;?postcode=DL10+6DN&lt;/code&gt;

    &lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;I put together a minimal viable powershell script.  I will not explain every step here but it uses the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Invoke-WebRequest&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cmcmdlet&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GET&lt;/code&gt; and parse the webpage, drill into the required page elements and interpret the human readable text into structured data.  There is quite a lot of Regex for validation and data scraping which I plan to cover in another post.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/24be9c7ffb28a0c7f2b5cdaaed87c89a.js&quot;&gt; &lt;/script&gt;

&lt;h2 id=&quot;pitfalls&quot;&gt;Pitfalls:&lt;/h2&gt;

&lt;p&gt;Invoke-WebRequest and the automatic parser are not especially quick or optimised.  For heavy use it would be better to write a custom tool using a common &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.NET HttpClient&lt;/code&gt; with parallel execution and an optimised scraper.&lt;/p&gt;

&lt;p&gt;As my address list contained duplicate postcodes, I first made a list of unique postcodes and then constructed a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Hashtable&lt;/code&gt; with the results of my above script per postcode.  I then join this &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Hashtable&lt;/code&gt; to the original set to avoid repeated lookups of the same postcode.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/500496f9424b42a32153e591f6e577b8.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Another advantage is that you can investigate missing values without iterating over the entire set of postcodes.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$problemPostCode&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dict&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetEnumerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-eq&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$problemTier&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dict&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetEnumerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;covidTier&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-eq&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# Attempt to correct missing values&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$problemTier&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;\Get-CoronovirusGovData.ps1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Key&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;There are other data points on the page that could be scraped.  However, at this point we have a geographic area for each postcode.  We would be far better served using this to query the API and obtain the structured data directly.&lt;/p&gt;
</description>
        <pubDate>Tue, 22 Dec 2020 00:00:00 +0000</pubDate>
        <link>https://it-trials.craigchamberlain.it/scripting/covid-tier-from-postcode</link>
        <guid isPermaLink="true">https://it-trials.craigchamberlain.it/scripting/covid-tier-from-postcode</guid>
        
        
        <category>Scripting</category>
        
      </item>
    
      <item>
        <title>AD User Account Status in PowerBI Model</title>
        <description>&lt;h2 id=&quot;problem&quot;&gt;Problem:&lt;/h2&gt;
&lt;p&gt;I my previous posts I covered connecting PowerBI to AD and forming and returning user account data.&lt;/p&gt;

&lt;p&gt;However, on inspecting the results it is not clear if users are enabled, disabled or in any other given state.  This might be really important if you are attempting to use PowerBi to reconcile HR or other databases to ensure consistency.&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution:&lt;/h2&gt;

&lt;p&gt;The account status is quite readily accessible in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;userAccountControl&lt;/code&gt; item of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;user&lt;/code&gt; record.&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/34/user-account-control.jpg&quot; /&gt;
	&lt;figcaption&gt;
	Drill into the user column to find the userAccountControl field
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;However, userAccountControl is a &lt;a href=&quot;&amp;quot;https://en.wikipedia.org/wiki/Mask_(computing)&amp;quot;&quot; target=&quot;_blank&quot;&gt;bit mask&lt;/a&gt; and is not immediately comprehensible.&lt;/p&gt;

&lt;p&gt;Some posts provide a simple explanation that 512 is enabled and 514 is disabled.  This is true, but not the complete story. This value actually encodes boolean values for 22 potentially independent options. Therefore there are 2^22 or 4,194,304 possible permutations of this number half of which are disabled, half of which are enabled.&lt;/p&gt;

&lt;p&gt;Given the ponderous number of permutations and the relative unlikely occurrence of most of them it makes much more sense to extract meaning from the result using logic than using a related table.&lt;/p&gt;

&lt;p&gt;Windows OS Hub have published an excellent article on this with a &lt;a href=&quot;&amp;quot;http://woshub.com/decoding-ad-useraccountcontrol-value/&amp;quot;&quot; target=&quot;_blank&quot;&gt;PowerShell function&lt;/a&gt; &lt;a href=&quot;&amp;quot;http://woshub.com/decoding-ad-useraccountcontrol-value/&amp;quot;&quot; target=&quot;_blank&quot;&gt;PowerShell function&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My first solution was to manually create a table limited to just the values that occur in my active directory, using the above PowerShell function, creating my own a pretty name and a boolean field to say if the account is disabled or enabled.&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/34/account-status.jpg&quot; /&gt;
	&lt;figcaption&gt;
	Form a many to one relationship between the OU table and the User table
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;This works perfectly well but I may have to add further rows as my active directory hosts more account status combinations.&lt;/p&gt;

&lt;p&gt;It would be straight forward to make a function, using a bitwise operator, that determined if any given account was disabled or not.  This work be ideal as a custom column on your user table.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powerquery&quot; data-lang=&quot;powerquery&quot;&gt;= (UAC as number)  =&amp;gt;
    Number.BitwiseAnd(UAC, 2) = 2&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;To cover all eventualities, and provide the most options for filtering and chopping your user table, we could dynamically create a related table to help us resolve the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;userAccountControl&lt;/code&gt; bit map.&lt;/p&gt;

&lt;p&gt;To start the process, I ported the Windows OS Hub, PowerShell function into PowerQuery.  I chose to return a list, rather than a combined string as it gives us the option to create a many to many relationship later on or serialise in a different form at a later point.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powerquery&quot; data-lang=&quot;powerquery&quot;&gt;= (UAC as number) as list =&amp;gt;
let 
  flags = {
    &quot;SCRIPT&quot;,
    &quot;ACCOUNTDISABLE&quot;,
    &quot;RESERVED&quot;,
    &quot;HOMEDIR_REQUIRED&quot;,
    &quot;LOCKOUT&quot;,
    &quot;PASSWD_NOTREQD&quot;,
    &quot;PASSWD_CANT_CHANGE&quot;,
    &quot;ENCRYPTED_TEXT_PWD_ALLOWED&quot;,
    &quot;TEMP_DUPLICATE_ACCOUNT&quot;,
    &quot;NORMAL_ACCOUNT&quot;,
    &quot;RESERVED&quot;,
    &quot;INTERDOMAIN_TRUST_ACCOUNT&quot;,
    &quot;WORKSTATION_TRUST_ACCOUNT&quot;,
    &quot;SERVER_TRUST_ACCOUNT&quot;,
    &quot;RESERVED&quot;,
    &quot;RESERVED&quot;,
    &quot;DONT_EXPIRE_PASSWORD&quot;,
    &quot;MNS_LOGON_ACCOUNT&quot;,
    &quot;SMARTCARD_REQUIRED&quot;,
    &quot;TRUSTED_FOR_DELEGATION&quot;,
    &quot;NOT_DELEGATED&quot;,
    &quot;USE_DES_KEY_ONLY&quot;,
    &quot;DONT_REQ_PREAUTH&quot;,
    &quot;PASSWORD_EXPIRED&quot;,
    &quot;TRUSTED_TO_AUTH_FOR_DELEGATION&quot;,
    &quot;RESERVED&quot;,
    &quot;PARTIAL_SECRETS_ACCOUNT&quot;,
    &quot;RESERVED&quot;,
    &quot;RESERVED&quot;,
    &quot;RESERVED&quot;,
    &quot;RESERVED&quot;,
    &quot;RESERVED&quot;
  },
  attributes = &quot;&quot;,
  enumerable = List.Numbers(0,List.Count(flags)),
  itterateBitMap = 
    List.Select(
      enumerable, 
      each Number.BitwiseAnd(UAC, Number.Power(2,_)) &amp;lt;&amp;gt; 0
    ),
  filteredFlags = List.Transform(itterateBitMap, each flags{_} )
in
  filteredFlags&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now we can then generate a the set of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;userAccountControl&lt;/code&gt; bit maps our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ActiveDirectory&lt;/code&gt; currently contains and produce a computed result for each.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powerquery&quot; data-lang=&quot;powerquery&quot;&gt;= let
userAccountControlCodes = List.RemoveNulls(List.Distinct(Table.Column(AllADUsers,&quot;userAccountControl&quot;))),
table1 = Table.FromList(userAccountControlCodes, Splitter.SplitByNothing(), {&quot;userAccountControlCodes&quot;}, null, ExtraValues.Error)
in 
Table.AddColumn(table1, &quot;DecodedUAC&quot;, each DecodeUserAccountControl(_[userAccountControlCodes]) )&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/34/resolved-user-account-control-bit-map.jpg&quot; /&gt;
	&lt;figcaption&gt;
	A Dynamically Produced Table of All the Required userAccountControl Values and a human readable representation
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;At this point you may prefer to serialise the lists.  I recommend that you &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Expand to New Rows&lt;/code&gt; and use this to create a many to many relationship to your user table in PowerBI.&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/34/resolved-user-account-control-bit-map-expanded.jpg&quot; /&gt;
	&lt;figcaption&gt;
	A dynamically produced table of all the Required userAccountControl values and a human readable representation
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2&gt;Other Posts in the PowerBI-AD Series:&lt;/h2&gt;

&lt;ul&gt;


&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-account-status-related-table&quot;&gt;Trial #34: AD User Account Status in PowerBI Model&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-groups-related-table&quot;&gt;Trial #33: Querying AD Users Group Membership with PowerBI&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-ou-related-table&quot;&gt;Trial #32: Making OUs More Readable with a Related Table in PowerBI Model&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-users-in-powerbi-model-transform-cn-to-ou&quot;&gt;Trial #31: Transform Active Directory User CN to OU in PowerBI Model&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-users-in-powerbi-model&quot;&gt;Trial #30: Accessing Active Directory Users in PowerBI Model&lt;/a&gt;&lt;/li&gt;

&lt;/ul&gt;
</description>
        <pubDate>Mon, 30 Nov 2020 00:00:00 +0000</pubDate>
        <link>https://it-trials.craigchamberlain.it/powerbi/active-directory-account-status-related-table</link>
        <guid isPermaLink="true">https://it-trials.craigchamberlain.it/powerbi/active-directory-account-status-related-table</guid>
        
        
        <category>PowerBI</category>
        
      </item>
    
      <item>
        <title>Querying AD Users Group Membership with PowerBI</title>
        <description>&lt;h2 id=&quot;problem&quot;&gt;Problem:&lt;/h2&gt;
&lt;p&gt;Group membership can be found quite deep inside the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;securityPrincipal&lt;/code&gt; record of an AD user.  There are two lists &lt;a href=&quot;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-ada2/58205720-cfeb-44bf-9b69-731898a2c750&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;msds-tokenGroupNamesGlobalAndUniversal&lt;/code&gt;&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-ada2/c2ec9a10-c670-423a-b542-43b8af712ed2&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;msds-tokenGroupNamesNoGCAcceptable&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I found these groups lists largely symmetrical but unfortunately but both contained unique values so for completeness, we may need to &lt;a href=&quot;https://docs.microsoft.com/en-us/powerquery-m/list-union&quot;&gt;Union&lt;/a&gt; these lists.&lt;/p&gt;

&lt;p&gt;Furthermore, this combined list is not particularly useful until it is serialised into a single column or preferably accessed using a related table.&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution:&lt;/h2&gt;

&lt;p&gt;First of all, as the lists &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;msds-tokenGroupNamesGlobalAndUniversal&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;msds-tokenGroupNamesNoGCAcceptable&lt;/code&gt; are nullable we need to guard against this case and only return sub-item, such as the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Common Name&lt;/code&gt; when there are items to iterate over.&lt;/p&gt;

&lt;p&gt;Rather than writing the same code out twice for each list, lets make a function.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powerquery&quot; data-lang=&quot;powerquery&quot;&gt;// GetGroups
= (securityPrincipal as record, itemName as text) as list =&amp;gt;
    if Record.Field(securityPrincipal, itemName) = null
    then {}
    else List.Transform(Record.Field(securityPrincipal, itemName), each _[cn])&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We can then use this function to create a custom column combining the results of the union of the transformed lists.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powerquery&quot; data-lang=&quot;powerquery&quot;&gt;= Table.AddColumn(
    #&quot;Table1&quot;, 
    &quot;Custom&quot;, 
    each 
       List.Union({
         GetGroups( _[securityPrincipal] ,&quot;msds-tokenGroupNamesGlobalAndUniversal&quot;),
         GetGroups( _[securityPrincipal] ,&quot;msds-tokenGroupNamesNoGCAcceptable&quot;)
       })
)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;At this point you may either flatten the list by serialising, if you have many columns in the table you want to use, or preferably by expansion, combining a new single purpose table back with your user table in a PowerQuery many to one relationship.&lt;/p&gt;

&lt;h3 id=&quot;option-1&quot;&gt;Option 1#&lt;/h3&gt;
&lt;figure&gt;
	&lt;img src=&quot;/assets/images/33/extract-values.jpg&quot; /&gt;
	&lt;figcaption&gt;
	Select the created column and extract values
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/33/choose-delimiter.jpg&quot; /&gt;
	&lt;figcaption&gt;
	Choose a delimiter that is unlikely to occur in any of your group names, such as ';'
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3 id=&quot;option-2&quot;&gt;Option 2#&lt;/h3&gt;
&lt;p&gt;However I would strongly recommend creating a simple table to use in a relationship.  For example create a table with just two columns, a foreign key such as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;distinguishedName&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sAMAcountName.&lt;/code&gt; and the expanded list of groups.&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/33/expand-column.jpg&quot; /&gt;
	&lt;figcaption&gt;
	Expanding the column, creates duplicate entries in the remaining columns so this method is best attempted with a limited number of columns.  Perhaps just a foreign key such as ````distinguishedName```` or ````sAMAcountName.````
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/33/relationship.jpg&quot; /&gt;
	&lt;figcaption&gt;
	This method will give you far greater control of how you select on and display the security group information.
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2&gt;Other Posts in the PowerBI-AD Series:&lt;/h2&gt;

&lt;ul&gt;


&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-account-status-related-table&quot;&gt;Trial #34: AD User Account Status in PowerBI Model&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-groups-related-table&quot;&gt;Trial #33: Querying AD Users Group Membership with PowerBI&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-ou-related-table&quot;&gt;Trial #32: Making OUs More Readable with a Related Table in PowerBI Model&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-users-in-powerbi-model-transform-cn-to-ou&quot;&gt;Trial #31: Transform Active Directory User CN to OU in PowerBI Model&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-users-in-powerbi-model&quot;&gt;Trial #30: Accessing Active Directory Users in PowerBI Model&lt;/a&gt;&lt;/li&gt;

&lt;/ul&gt;
</description>
        <pubDate>Sun, 29 Nov 2020 00:00:00 +0000</pubDate>
        <link>https://it-trials.craigchamberlain.it/powerbi/active-directory-groups-related-table</link>
        <guid isPermaLink="true">https://it-trials.craigchamberlain.it/powerbi/active-directory-groups-related-table</guid>
        
        
        <category>PowerBI</category>
        
      </item>
    
      <item>
        <title>Making OUs More Readable with a Related Table in PowerBI Model</title>
        <description>&lt;h2 id=&quot;problem&quot;&gt;Problem:&lt;/h2&gt;
&lt;p&gt;I my previous posts I covered connecting PowerBI to AD and forming an custom “OU” column.&lt;/p&gt;

&lt;p&gt;The values in this “OU” column do not look great in reports if we want to select our users by OU, it would be preferable to have something neater.&lt;/p&gt;

&lt;p&gt;For example:
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Staff&lt;/code&gt; looks better &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OU=Staff,CN=Users,DC=domain,DC=local&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution:&lt;/h2&gt;

&lt;p&gt;You could certainly achieve this by manipulating the string manually or having a series of nested &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;if/then/else&lt;/code&gt; statements, matching your OU’s against desired outputs.&lt;/p&gt;

&lt;p&gt;However, AD already stores a name for each OU, which will has the great benefit of staying in sync with the user objects we are querying.&lt;/p&gt;

&lt;p&gt;Therefore, I chose to create an additional table in the PowerQuery Editor, and then form a relationship between this and my user table in the PowerBI model linked on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;distinguishedName&lt;/code&gt; of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OU&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The OU table is called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;organizationalUnit&lt;/code&gt;.&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/32/ou-table.jpg&quot; /&gt;
	&lt;figcaption&gt;
	Selecting the organizationalUnit table from your domain's ActiveDirectory
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/32/ou-relationship.jpg&quot; /&gt;
	&lt;figcaption&gt;
	Form a many to one relationship between the OU table and the User table
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;On loading the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;organizationalUnit&lt;/code&gt; from your domain delete superfluous columns “top”, “displayName”, “msExchBaseClass”.&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/32/delete-columns.jpg&quot; /&gt;
	&lt;figcaption&gt;
	Delete Superfluous Columns Leaving organizationalUnit and distinguishedName
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/32/add-column.jpg&quot; /&gt;
	&lt;figcaption&gt;
	Add a Custom Column that drills down into organizationalUnit and return the list, or the first object in it.
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Finally remove the organizationalUnit column.&lt;/p&gt;

&lt;p&gt;This produces the following &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PowerQuery&lt;/code&gt; expression&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powerquery&quot; data-lang=&quot;powerquery&quot;&gt;let
    Source = ActiveDirectory.Domains(&quot;domain.local&quot;),
    #&quot;domain&quot; = Source{[Domain=&quot;domain.local&quot;]}[Object Categories],
    organizationalUnit1 = #&quot;domain&quot;{[Category=&quot;organizationalUnit&quot;]}[Objects],
    #&quot;Removed Columns&quot; = Table.RemoveColumns(organizationalUnit1,{&quot;top&quot;, &quot;displayName&quot;, &quot;msExchBaseClass&quot;}),
    #&quot;Added Custom&quot; = Table.AddColumn(#&quot;Removed Columns&quot;, &quot;Name&quot;, each List.First([organizationalUnit][ou])),
    #&quot;Removed Columns1&quot; = Table.RemoveColumns(#&quot;Added Custom&quot;,{&quot;organizationalUnit&quot;})
in
    #&quot;Removed Columns1&quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;pitfalls&quot;&gt;Pitfalls:&lt;/h2&gt;

&lt;p&gt;This is really straight forward.  The one thing that might not be ideal is returning the first item of the list contained in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ou&lt;/code&gt; object. There may be some instances where the list contains more than one item and you want them all or one other than the first.&lt;/p&gt;

&lt;h2&gt;Other Posts in the PowerBI-AD Series:&lt;/h2&gt;

&lt;ul&gt;


&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-account-status-related-table&quot;&gt;Trial #34: AD User Account Status in PowerBI Model&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-groups-related-table&quot;&gt;Trial #33: Querying AD Users Group Membership with PowerBI&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-ou-related-table&quot;&gt;Trial #32: Making OUs More Readable with a Related Table in PowerBI Model&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-users-in-powerbi-model-transform-cn-to-ou&quot;&gt;Trial #31: Transform Active Directory User CN to OU in PowerBI Model&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-users-in-powerbi-model&quot;&gt;Trial #30: Accessing Active Directory Users in PowerBI Model&lt;/a&gt;&lt;/li&gt;

&lt;/ul&gt;
</description>
        <pubDate>Sat, 28 Nov 2020 00:00:00 +0000</pubDate>
        <link>https://it-trials.craigchamberlain.it/powerbi/active-directory-ou-related-table</link>
        <guid isPermaLink="true">https://it-trials.craigchamberlain.it/powerbi/active-directory-ou-related-table</guid>
        
        
        <category>PowerBI</category>
        
      </item>
    
      <item>
        <title>Transform Active Directory User CN to OU in PowerBI Model</title>
        <description>&lt;h2 id=&quot;problem&quot;&gt;Problem:&lt;/h2&gt;
&lt;p&gt;One of the columns present in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Users&lt;/code&gt; table is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;distinguishedName&lt;/code&gt;.  The OU of the user is not obviously available in the table or inside any of its records.&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution:&lt;/h2&gt;

&lt;p&gt;One simple solution, using the menus takes just three steps and covers over 99% of accounts in my domain and all of the accounts I am interested in.&lt;/p&gt;

&lt;p&gt;If you want to retain the column distinguishedName, for example to act as a primary key, begin the process by creating a new &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Custom Column&lt;/code&gt;&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/31/copy-column.jpg&quot; /&gt;
	&lt;figcaption&gt;
	Copy distinguishedName to new column with a suitable name.
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Or else rename the existing column to OU&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/31/rename-column.jpg&quot; /&gt;
	&lt;figcaption&gt;
	Rename the Column to OU or OrganisationUnit
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/31/text-after-first-ou.jpg&quot; /&gt;
	&lt;figcaption&gt;
	Extract text after the first instance of &quot;OU&quot;
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/31/prefix-ou.jpg&quot; /&gt;
	&lt;figcaption&gt;
	Add &quot;OU&quot; back to the start of the string as the previous step removes it
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;This produces the following &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PowerQuery&lt;/code&gt; expression&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powerquery&quot; data-lang=&quot;powerquery&quot;&gt;#&quot;Table1&quot; = Table.AddColumn(#&quot;Table0&quot;, &quot;OU&quot;, each [distinguishedName])
#&quot;Table2&quot; = Table.TransformColumns(#&quot;Table1&quot;, {{&quot;OU&quot;, each Text.AfterDelimiter(_, &quot;,OU=&quot;), type text}}),
#&quot;Table3&quot; = Table.TransformColumns(#&quot;Table2&quot;, {{&quot;OU&quot;, each &quot;OU=&quot; &amp;amp; _, type text}})&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;pitfalls&quot;&gt;Pitfalls:&lt;/h2&gt;

&lt;p&gt;Depending on your OU structure, some users may not be in an OU and their &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OU&lt;/code&gt; column will read &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OU=&lt;/code&gt;.
The simplest solution is just to add a filter to remove the malformed records.&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/31/filter-ou.jpg&quot; /&gt;
	&lt;figcaption&gt;
	Filter invalid results with empty OU
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powerquery&quot; data-lang=&quot;powerquery&quot;&gt;    #&quot;Table4&quot; = Table.SelectRows(#&quot;Table3&quot;, each ([OU] &amp;lt;&amp;gt; &quot;OU=&quot;))&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;However, you could also write a more complex transform with branching logic to remove a single CN in the case that there are no OUs but I did not need to report on these accounts anyway.&lt;/p&gt;

&lt;p&gt;Unfortunately, I could not simply use the comma delimited structure of the distingushedName to remove the first element as commas are permitted in an OU string and may be very common and may indeed if you name &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Jane Blogs&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Blogs, Jane&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;These extra commas are escaped with a forward slash &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CN=Blogs/, Jane,OU=...&lt;/code&gt; therefore a slightly more complete solution is as follows, PowerQuery only I am afraid.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powerquery&quot; data-lang=&quot;powerquery&quot;&gt;#&quot;Table2&quot; = Table.TransformColumns(#&quot;Table1 , 
				{{ 
					&quot;OU&quot;, 
					each if Text.Contains(_,&quot;\,&quot;) 
						then  &quot;OU=&quot; &amp;amp; Text.AfterDelimiter(_, &quot;,OU=&quot;) 
						else Text.AfterDelimiter(_, &quot;,&quot;),
					type text
				}}
			)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This does not cover the edge case that the user is not in an OU but inside a CN that does have a comma.  However, these accounts seem to be limited to those in built in containers such as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CN=Users,DC=domain,DC=local&lt;/code&gt; or other Microsoft/AD structures so commas in these are unlikely.&lt;/p&gt;

&lt;p&gt;With Regular Expressions you could do a reverse lookup to check the condition of the previous &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;char&lt;/code&gt; but I haven’t seen this option in PowerQuery.  Comment below if you know better.&lt;/p&gt;

&lt;h2&gt;Other Posts in the PowerBI-AD Series:&lt;/h2&gt;

&lt;ul&gt;


&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-account-status-related-table&quot;&gt;Trial #34: AD User Account Status in PowerBI Model&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-groups-related-table&quot;&gt;Trial #33: Querying AD Users Group Membership with PowerBI&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-ou-related-table&quot;&gt;Trial #32: Making OUs More Readable with a Related Table in PowerBI Model&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-users-in-powerbi-model-transform-cn-to-ou&quot;&gt;Trial #31: Transform Active Directory User CN to OU in PowerBI Model&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-users-in-powerbi-model&quot;&gt;Trial #30: Accessing Active Directory Users in PowerBI Model&lt;/a&gt;&lt;/li&gt;

&lt;/ul&gt;
</description>
        <pubDate>Thu, 26 Nov 2020 00:00:00 +0000</pubDate>
        <link>https://it-trials.craigchamberlain.it/powerbi/active-directory-users-in-powerbi-model-transform-cn-to-ou</link>
        <guid isPermaLink="true">https://it-trials.craigchamberlain.it/powerbi/active-directory-users-in-powerbi-model-transform-cn-to-ou</guid>
        
        
        <category>PowerBI</category>
        
      </item>
    
      <item>
        <title>Accessing Active Directory Users in PowerBI Model</title>
        <description>&lt;h2 id=&quot;problem&quot;&gt;Problem:&lt;/h2&gt;
&lt;p&gt;PowerBI has supports connecting to Active Directory as standard.  However, this is not as simple or as intuitive as either the popular Active Directory GUIs tool or the indispensable &lt;a href=&quot;https://docs.microsoft.com/en-us/powershell/module/addsadministration/&quot;&gt;PowerShell ActiveDirectory Module&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I will first show how to connect to Active Directory Users and then have several more posts on the filters I applied to make a set of usable models.&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution:&lt;/h2&gt;

&lt;p&gt;Connecting to Active Directory is as easy stepping through the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;New Source&lt;/code&gt; interface.&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/30/ad.jpg&quot; /&gt;
	&lt;figcaption&gt;
	Adding an Active Directory Data to PowerBI Source
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Scroll down to the Users Table.&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;/assets/images/30/ad-user-table.jpg&quot; /&gt;
	&lt;figcaption&gt;
	Selecting the User Objects
	&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;pitfalls&quot;&gt;Pitfalls:&lt;/h2&gt;

&lt;p&gt;As you will see, all user types are returned; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Service Accounts&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Contacts&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;User Accounts&lt;/code&gt; …&lt;/p&gt;

&lt;p&gt;It is not obvious what type the users are, if they are disabled, or really any other of the information you are likely to want.&lt;/p&gt;

&lt;p&gt;Furthermore the data returned is multi-dimensional. To make it more usable we will need to convert into a tabular form, perhaps utilising related tables.&lt;/p&gt;

&lt;h2&gt;Other Posts in the PowerBI-AD Series:&lt;/h2&gt;

&lt;ul&gt;


&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-account-status-related-table&quot;&gt;Trial #34: AD User Account Status in PowerBI Model&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-groups-related-table&quot;&gt;Trial #33: Querying AD Users Group Membership with PowerBI&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-ou-related-table&quot;&gt;Trial #32: Making OUs More Readable with a Related Table in PowerBI Model&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-users-in-powerbi-model-transform-cn-to-ou&quot;&gt;Trial #31: Transform Active Directory User CN to OU in PowerBI Model&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;/powerbi/active-directory-users-in-powerbi-model&quot;&gt;Trial #30: Accessing Active Directory Users in PowerBI Model&lt;/a&gt;&lt;/li&gt;

&lt;/ul&gt;
</description>
        <pubDate>Wed, 25 Nov 2020 00:00:00 +0000</pubDate>
        <link>https://it-trials.craigchamberlain.it/powerbi/active-directory-users-in-powerbi-model</link>
        <guid isPermaLink="true">https://it-trials.craigchamberlain.it/powerbi/active-directory-users-in-powerbi-model</guid>
        
        
        <category>PowerBI</category>
        
      </item>
    
      <item>
        <title>Iterating Over Multiple API Endpoints in a PowerBI Query</title>
        <description>&lt;h2 id=&quot;problem&quot;&gt;Problem:&lt;/h2&gt;
&lt;p&gt;It is straight forward to source data from a web request in PowerBI.  You can do so by selecting Get Data -&amp;gt; Web.
 &lt;img src=&quot;/assets/images/29/gui.jpg&quot; alt=&quot;GUI&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Optionally, under advanced you can “Add Parts” to your URL.  For example, the code behind below, found in the advanced editor, is generated by the URL parts &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://craigchamberlain.github.io/moon-data/api/moon-phase-data/&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1700&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-m&quot; data-lang=&quot;m&quot;&gt;&lt;span class=&quot;n&quot;&gt;let&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Source&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Web&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;https://craigchamberlain.github.io/moon-data/api/moon-phase-data/&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; 
      &lt;span class=&quot;s2&quot;&gt;&quot;1700&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;in&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Source&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;However, this will return just one response.  If you need to iterate over paged results or indeed target a different URL entirely.&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution:&lt;/h2&gt;

&lt;p&gt;The first step might be to converting the query into a function.  For those familiar with Expression Bodied Functions or Lambda Expressions the syntax may be familiar, simply prefix the expression with zero or more comma separated parameters in parenthesis, followed by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;=&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Please note if you may need to convert the parameter type to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Text&lt;/code&gt;, in my example from a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Number&lt;/code&gt;.  I will write another post on writing parameter types.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-m&quot; data-lang=&quot;m&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;let&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Source&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Web&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
     &lt;span class=&quot;s2&quot;&gt;&quot;https://craigchamberlain.github.io/moon-data/api/moon-phase-data/&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; 
      &lt;span class=&quot;n&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ToText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;in&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Source&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The final step at this stage would be to iterate over the various years and collect into a unified dataset.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-m&quot; data-lang=&quot;m&quot;&gt;&lt;span class=&quot;n&quot;&gt;let&lt;/span&gt;

  &lt;span class=&quot;p&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Create&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iterate&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;over&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Min&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1700&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Max&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2082&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Years&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Numbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Max&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Min&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
   
  &lt;span class=&quot;p&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;AllYearsData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Years&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;Web&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;https://craigchamberlain.github.io/moon-data/api/moon-phase-data/&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ToText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;in&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;AllYearsData&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Please note that this is not how I would present this query in production.  At a minimum, I would define the function in a separate file.  I would also prefer to see the upper and lower limits of the list provided by variables, or the range by a query and the parameters types defined.  There would be further transformations to make the data usable but this is easily achieved in the GUI and is not within the scope of this particular trial.&lt;/p&gt;
</description>
        <pubDate>Thu, 15 Oct 2020 00:00:00 +0100</pubDate>
        <link>https://it-trials.craigchamberlain.it/powerbi/iterating-over-multiple-endpoints-in-powerbi</link>
        <guid isPermaLink="true">https://it-trials.craigchamberlain.it/powerbi/iterating-over-multiple-endpoints-in-powerbi</guid>
        
        
        <category>PowerBI</category>
        
      </item>
    
  </channel>
</rss>
